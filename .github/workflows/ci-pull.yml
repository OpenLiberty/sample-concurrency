# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven on Pull

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "actions"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0.25
        env:
          POSTGRES_USER: sampleUser
          POSTGRES_PASSWORD: openliberty
          POSTGRES_DB: testdb
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
    - name: Set up JDK 21
      uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
      with:
        java-version: 21
        distribution: 'temurin'
        cache: maven
    - name: Compile App and Tests
      run: |
           mvn -B compiler:compile
           mvn -B compiler:testCompile
    - name: Create Server and Deploy App
      run: |
           mvn -B liberty:create
           mvn -B liberty:deploy
    - name: Start Server
      run: mvn -B liberty:start
    - name: Run Integration Tests
      run: mvn -B failsafe:integration-test
    - name: Stop Server
      run: mvn -B liberty:stop
    - name: Verify Integration Test Results
      run: mvn -B failsafe:verify
    - name: Archive Liberty logs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: liberty-logs
        path: target/liberty/wlp/usr/servers/JakartaConcurrencyServer/logs/
        retention-days: 1